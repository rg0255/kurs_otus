# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"
  config.vm.box_check_update = false
  config.vm.hostname = "node1"
  config.vm.define "node1"
  config.vm.network "public_network", ip: "192.168.190.22"
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.provider "virtualbox" do |vb|
        vb.name = "node1"
        vb.cpus = "2"
        vb.memory = "2048"

      # adding block devices
      
        disk1 = "./node1_disk1.vdi"
        disk2 = "./node1_disk2.vdi"
        disk3 = "./node1_disk3.vdi"
        disk4 = "./node1_disk4.vdi" 
        disk5 = "./node1_disk5.vdi"    

      # If disks don't exist, create them
        unless FileTest.exist?(disk1)
          vb.customize ['createhd', '--filename', disk1, '--variant', 'Fixed', '--size', 100]
        end      
        unless FileTest.exist?(disk2)
          vb.customize ['createhd', '--filename', disk2, '--variant', 'Fixed', '--size', 100]
        end
        unless FileTest.exist?(disk3)
          vb.customize ['createhd', '--filename', disk3, '--variant', 'Fixed', '--size', 100]
        end
        unless FileTest.exist?(disk4)
          vb.customize ['createhd', '--filename', disk4, '--variant', 'Fixed', '--size', 100]
        end
        unless FileTest.exist?(disk5)
          vb.customize ['createhd', '--filename', disk5, '--variant', 'Fixed', '--size', 100]
        end   
      # Attach the drives to the SCSI controller
        vb.customize ['storageattach', :id,  '--storagectl', 'SCSI', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', disk1]
        vb.customize ['storageattach', :id,  '--storagectl', 'SCSI', '--port', 3, '--device', 0, '--type', 'hdd', '--medium', disk2]
        vb.customize ['storageattach', :id,  '--storagectl', 'SCSI', '--port', 4, '--device', 0, '--type', 'hdd', '--medium', disk3]
        vb.customize ['storageattach', :id,  '--storagectl', 'SCSI', '--port', 5, '--device', 0, '--type', 'hdd', '--medium', disk4]
        vb.customize ['storageattach', :id,  '--storagectl', 'SCSI', '--port', 6, '--device', 0, '--type', 'hdd', '--medium', disk5]
      end
      # Start doing some real work
      # If the block device won't mount then it needs an FS
      
      # Enable provisioning
       config.vm.provision "ansible" do |ansible|
        ansible.playbook = "/home/rg/vm/ansible/playbook_mdraid.yml"        

       end


      #node.vm.provision "shell", inline: <<-SHELL
      #  sudo mkdir /mnt/persistent1
      #  sudo mkdir /mnt/persistent2
      #  if ! (sudo mount /dev/sdc /mnt/persistent1); then sudo mkfs.ext4 /dev/sdc; sudo mount /dev/sdc /mnt/persistent1; fi
      #  if ! (sudo mount /dev/sdd /mnt/persistent2); then sudo mkfs.ext4 /dev/sdd; sudo mount /dev/sdd /mnt/persistent2; fi
      #  # Update and upgrade
      #  sudo apt-get update
      #  sudo apt-get upgrade -y
        # Install Docker stable
      #  sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
      #  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      #  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      #  sudo apt-get update
      #  sudo apt-get install -y docker-ce
      #SHELL
       
  end
  